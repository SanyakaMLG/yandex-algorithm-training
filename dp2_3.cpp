#include <iostream>

using namespace std;

int main() {
    int n, m;
    cin >> n >> m;
    int dp[n + 2][m + 2];
    for (int i = 0; i < n + 2; i++) {
        dp[i][0] = 0;
        dp[i][1] = 0;
    }
    for (int i = 0; i < m + 2; i++) {
        dp[0][i] = 0;
        dp[1][i] = 0;
    }
    dp[2][2] = 1;
    for (int i = 2; i < n + 2; i++) {
        for (int j = 2; j < m + 2; j++) {
            if (i == 2 && j == 2) continue;
            dp[i][j] = dp[i - 2][j - 1] + dp[i - 1][j - 2];
        }
    }
    cout << dp[n + 1][m + 1];
    return 0;
}

/*
 Дана прямоугольная доска N × M (N строк и M столбцов). В левом верхнем углу находится шахматный конь, которого необходимо
 переместить в правый нижний угол доски. В данной задаче конь может перемещаться на две клетки вниз и одну клетку вправо или на
 одну клетку вниз и две клетки вправо.
 Необходимо определить, сколько существует различных маршрутов, ведущих из левого верхнего в правый нижний угол.
*/