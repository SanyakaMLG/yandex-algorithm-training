#include <iostream>

using namespace std;

int main() {
    int n, m;
    cin >> n >> m;
    int dp[n][m];
    int arr[n][m];
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < m; j++) {
            cin >> arr[i][j];
        }
    }
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < m; j++) {
            if (i >= 1 && j >= 1) {
                dp[i][j] = min(dp[i - 1][j], dp[i][j - 1]) + arr[i][j];
            } else if (i >= 1) {
                dp[i][j] = dp[i - 1][j] + arr[i][j];
            } else if (j >= 1) {
                dp[i][j] = dp[i][j - 1] + arr[i][j];
            } else {
                dp[i][j] = arr[i][j];
            }
        }
    }
    cout << dp[n - 1][m - 1];
}

/*
 В каждой клетке прямоугольной таблицы N×M записано некоторое число. Изначально игрок находится в левой верхней клетке. За один
 ход ему разрешается перемещаться в соседнюю клетку либо вправо, либо вниз (влево и вверх перемещаться запрещено). При проходе
 через клетку с игрока берут столько килограммов еды, какое число записано в этой клетке (еду берут также за первую и последнюю
 клетки его пути).
 Требуется найти минимальный вес еды в килограммах, отдав которую игрок может попасть в правый нижний угол.
 */